openapi: 3.1.0
info:
  title: WISH - API v1
  description: |-
    [WISH](https://shareu.ru/) documentation (mainly for mobile applications)
    

  #termsOfService: http://swagger.io/terms/
  contact:
    email: markzum@yandex.ru
  #license:
  #  name: Apache 2.0
  #  url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://shareu.ru/api/v1
tags:
  - name: auth
    description: User authorization
  - name: stations
    description: Stations
  - name: orders
    description: Actions with orders
paths:
  /auth/start-phone-verification/:
    post:
      tags:
        - auth
      summary: Start phone verification
      description: Init flash-call for phone verification
      operationId: authStartPhoneVerification
      requestBody:
        # description: Init flash-call for phone verification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/startPhoneVerificationRequest'
        required: true
      responses:
        '200':
          description: The flash-call to user has been ordered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standartOKSchema'
  
  /auth/check-code:
    post:
      tags:
        - auth
      summary: Submit the code
      description: If code is valid user will be created (if not exists)
      operationId: authCheckCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authCheckCodeRequest'
        required: true
      responses:
        '200':
          description: Successful check
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/authCheckCodeResponseVerified'
                  - $ref: '#/components/schemas/authCheckCodeResponseNotVerified'
              examples:
                success:
                  summary: Code is verified
                  value:
                    status: "ok"
                    is_verified: true
                    auth_token: "eyJhbGciOiJIUzI1NiIIInR5cCI6IkpXVCJ9.eyJpZCI6NywiZXhwIjoyMQM4NDIxMTY6fQ.oPmyN0ctSVWGZySvB5ZLfLeJr7maHvBlKY6XuaZBijw"
                error:
                  summary: Code is not verified
                  value:
                    status: "ok"
                    is_verified: false
                    reason: "timeout_exceeded"

  /stations/get-all-stations/:
    get:
      tags:
        - stations
      summary: Get all stations with all data
      description: Get all stations with all data
      responses:
        '200':
          description: Successful check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAllStationsResponse'
  

  /orders/take-umbrella/:
    post:
      tags:
        - orders
      summary: Take umbrella
      security: 
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/takeUmbrellaRequest'
        required: true
      responses:
        '200':
          description: Returned payment method
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/takeUmbrellaResponseSuccess'
                  - $ref: '#/components/schemas/takeUmbrellaResponseError'
              examples:
                success:
                  summary: Deposit is taken / manual is required
                  value:
                    status: "ok"
                    payment_mode: "auto"
                    deposit_amount: 149
                    user_id: 1234
                    station_id: 23
                error:
                  summary: The deposit cannot be taken
                  value:
                    status: "error"
                    message: "You have an active order"
  
  /orders/put-umbrella/:
    post:
      tags:
        - orders
      summary: Put umbrella
      security: 
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/takeUmbrellaRequest'
        required: true
      responses:
        '200':
          description: Returned payment method
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/putUmbrellaResponseSuccess'
                  - $ref: '#/components/schemas/takeUmbrellaResponseError'
              examples:
                success:
                  summary: The umbrella return slot is open
                  value:
                    status: "ok"
                    slot: 8
                    order_id: 25387
                error:
                  summary: Error
                  value:
                    status: "error"
                    message: "You have no active orders"






components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    startPhoneVerificationRequest:
      required:
        - phone
      type: object
      properties:
        phone:
          type: string
          description: Spaces, dashes, and parentheses can be used. Be sure to use +7
          examples: ['+7 (800) 555-35-35']
    
    standartOKSchema:
      type: object
      properties:
        status:
          type: string
          enum: ["ok"]
    
    authCheckCodeRequest:
      required:
        - phone
        - code
      type: object
      properties:
        phone:
          type: string
          description: Spaces, dashes, and parentheses can be used. Be sure to use +7
          examples: ['+7 (800) 555-35-35']
        code:
          type: string
          examples: ['1234']
    
    authCheckCodeResponseVerified:
      type: object
      properties:
        status:
          type: string
          enum: ["ok"]
        is_verified:
          type: boolean
          enum: [true]
        auth_token:
          type: string
          examples: ["eyJhbGciOiJIUzI1NiIIInR5cCI6IkpXVCJ9.eyJpZCI6NywiZXhwIjoyMQM4NDIxMTY6fQ.oPmyN0ctSVWGZySvB5ZLfLeJr7maHvBlKY6XuaZBijw"]

    authCheckCodeResponseNotVerified:
      type: object
      properties:
        status:
          type: string
          enum: ["ok"]
        is_verified:
          type: boolean
          enum: [false]
        reason:
          type: string
          enum:
            - "attempts_exceeded"
            - "timeout_exceeded"
            - null
    

    stationObject:
      type: object
      properties:
        id:
          type: integer
          examples: [32]
        title:
          type: string
          examples: ['Какое-то кафе']
        address:
          type: string
          examples: ['ул. Пушкина, д. Колотушкина']
        latitude:
          type: number
          examples: [55.755863]
        longitude:
          type: number
          examples: [37.6177]
        opening_hours:
          type: array
          items:
            type: object
            properties:
              mon:
                type: object
                description: may be mon/tue/wed/thu/fri/sat/sun
                properties: 
                  start:
                    type: string
                    examples: ["9:00"]
                  stop:
                    type: string
                    examples: ["21:00"]
                  break_start:
                    type: string
                    examples: ["13:30"]
                  break_stop:
                    type: string
                    examples: ["14:00"]
              tue:
                type: object
                description: may be mon/tue/wed/thu/fri/sat/sun
                properties: 
                  start:
                    type: string
                    examples: ["10:00"]
                  stop:
                    type: string
                    examples: ["20:00"]
              sun:
                type: string
                examples: [null]
        capacity:
          description: How many umbrellas can fit in the station at all
          type: integer
          examples: [20]
        can_put:
          description: How many umbrellas can fit in the station now
          type: integer
          examples: [6]
        can_take:
          description: How many umbrellas are there in the station now
          type: integer
          examples: [14]
        information:
          description: Additional information how to find the station
          type: string
          examples: ["Пойдите туда, не знаю куда"]
        state:
          description: |-
            `0` - works fine \
            `1` - does not work
          type: integer
          examples: [0]
    
    getAllStationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/stationObject'
    

    takeUmbrellaRequest:
      type: object
      properties: 
        station_id:
          type: integer
          examples: [23]

    takeUmbrellaResponseSuccess:
      type: object
      properties: 
        status:
          type: string
          emum: ["ok"]
        payment_mode:
          description: |- 
            `auto` - the deposit is automatically debited \
            `manual` - a manual deposit is required
          type: string
          enum: ["auto", "manual"]
        deposit_amount:
          type: integer
          examples: [149]
        user_id:
          type: integer
          examples: [1234]
        station_id:
          type: integer
          examples: [23]
    
    takeUmbrellaResponseError:
      type: object
      properties: 
        status:
          type: string
          emum: ["error"]
        message:
          type: string
          examples: ["Unauthorized"]
    

    putUmbrellaResponseSuccess:
      type: object
      properties: 
        status:
          type: string
          emum: ["ok"]
        slot:
          description: The slot that will open to return the umbrella
          type: integer
          examples: [8]
        order_id:
          type: integer
          examples: [25387]

